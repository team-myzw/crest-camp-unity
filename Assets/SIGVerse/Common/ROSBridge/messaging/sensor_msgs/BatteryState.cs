// Generated by gencs from sensor_msgs/BatteryState.msg
// DO NOT EDIT THIS FILE BY HAND!

using System;
using System.Collections;
using System.Collections.Generic;
using SIGVerse.RosBridge;
using UnityEngine;

using SIGVerse.RosBridge.std_msgs;

namespace SIGVerse.RosBridge 
{
	namespace sensor_msgs 
	{
		[System.Serializable]
		public class BatteryState : RosMessage
		{
			public std_msgs.Header header;
			public float voltage;
			public float current;
			public float charge;
			public float capacity;
			public float design_capacity;
			public float percentage;
			public byte power_supply_status;
			public byte power_supply_health;
			public byte power_supply_technology;
			public bool present;
			public System.Collections.Generic.List<float>  cell_voltage;
			public string location;
			public string serial_number;

			public const byte POWER_SUPPLY_STATUS_UNKNOWN = 0;
			public const byte POWER_SUPPLY_STATUS_CHARGING = 1;
			public const byte POWER_SUPPLY_STATUS_DISCHARGING = 2;
			public const byte POWER_SUPPLY_STATUS_NOT_CHARGING = 3;
			public const byte POWER_SUPPLY_STATUS_FULL = 4;
			public const byte POWER_SUPPLY_HEALTH_UNKNOWN = 0;
			public const byte POWER_SUPPLY_HEALTH_GOOD = 1;
			public const byte POWER_SUPPLY_HEALTH_OVERHEAT = 2;
			public const byte POWER_SUPPLY_HEALTH_DEAD = 3;
			public const byte POWER_SUPPLY_HEALTH_OVERVOLTAGE = 4;
			public const byte POWER_SUPPLY_HEALTH_UNSPEC_FAILURE = 5;
			public const byte POWER_SUPPLY_HEALTH_COLD = 6;
			public const byte POWER_SUPPLY_HEALTH_WATCHDOG_TIMER_EXPIRE = 7;
			public const byte POWER_SUPPLY_HEALTH_SAFETY_TIMER_EXPIRE = 8;
			public const byte POWER_SUPPLY_TECHNOLOGY_UNKNOWN = 0;
			public const byte POWER_SUPPLY_TECHNOLOGY_NIMH = 1;
			public const byte POWER_SUPPLY_TECHNOLOGY_LION = 2;
			public const byte POWER_SUPPLY_TECHNOLOGY_LIPO = 3;
			public const byte POWER_SUPPLY_TECHNOLOGY_LIFE = 4;
			public const byte POWER_SUPPLY_TECHNOLOGY_NICD = 5;
			public const byte POWER_SUPPLY_TECHNOLOGY_LIMN = 6;

			public BatteryState()
			{
				this.header = new std_msgs.Header();
				this.voltage = 0.0f;
				this.current = 0.0f;
				this.charge = 0.0f;
				this.capacity = 0.0f;
				this.design_capacity = 0.0f;
				this.percentage = 0.0f;
				this.power_supply_status = 0;
				this.power_supply_health = 0;
				this.power_supply_technology = 0;
				this.present = false;
				this.cell_voltage = new System.Collections.Generic.List<float>();
				this.location = "";
				this.serial_number = "";
			}

			public BatteryState(std_msgs.Header header, float voltage, float current, float charge, float capacity, float design_capacity, float percentage, byte power_supply_status, byte power_supply_health, byte power_supply_technology, bool present, System.Collections.Generic.List<float>  cell_voltage, string location, string serial_number)
			{
				this.header = header;
				this.voltage = voltage;
				this.current = current;
				this.charge = charge;
				this.capacity = capacity;
				this.design_capacity = design_capacity;
				this.percentage = percentage;
				this.power_supply_status = power_supply_status;
				this.power_supply_health = power_supply_health;
				this.power_supply_technology = power_supply_technology;
				this.present = present;
				this.cell_voltage = cell_voltage;
				this.location = location;
				this.serial_number = serial_number;
			}

			new public static string GetMessageType()
			{
				return "sensor_msgs/BatteryState";
			}

			new public static string GetMD5Hash()
			{
				return "476f837fa6771f6e16e3bf4ef96f8770";
			}
		} // class BatteryState
	} // namespace sensor_msgs
} // namespace SIGVerse.ROSBridge

